@using CRBA.Models
@model CRBA.Models.User

@{
    ViewBag.Title = "Edit User";
}
<br/>
<div class="panel panel-default">
    <div class="panel-heading text-center">
        <h3>
            <strong>Update User</strong>
        </h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.Password)

                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "input-group-addon"})
                            @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "input-group-addon"})
                            @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                    </div>

                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new {@class = "input-group-addon"})
                            @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
                        <span class="text-danger">@ViewBag.UserNameExistsError</span>
                    </div>

                    <div class="col-md-6">
                        <div class="input-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "input-group-addon"})
                            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                    <strong>Select Roles for this user <i class="fa fa-arrow-circle-down" aria-hidden="true"></i></strong>
                            </div>
                            <div class="panel-body">
                                @{

                                    List<Role> roles = ViewBag.AllRoles;
                                    foreach (var role in roles)
                                    {
                                        var isRoleChecked = Model.Roles.Any(r => r.RoleId == role.RoleId);
                                        var buttonClassForRole = "btn-default";
                                        if (isRoleChecked)
                                        {
                                            buttonClassForRole = "btn-info";
                                        }
                                        
                                                <span class="role btn @buttonClassForRole">
                                                   
                                                    <input type="checkbox" name="selectedRoles" value="@role.RoleId"
                                                           @if (isRoleChecked)
                                                           {
                                                               <text> Checked</text>
                                                           }/>
                                                    <strong>@role.RoleName</strong>
                                                   
                                                </span>
                                    }
                                }


                            </div>
                        </div>
                  
                    </div>


                </div>


                <div class="text-center">

                    <input type="submit" value="Save" class="btn btn-success"/>
                    @Html.ActionLink("Back to List", "UserList", null, new {@class = "btn btn-primary"})

                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/CustomJs/security.js"></script>
}